'''
Задан граф в виде количества вершин n<=10 и последовательности ребер
(каждое ребро задается парой смежных вершин).
Получить матрицу смежности.
а) Напечатать матрицу смежности. Проверить, есть ли в графе петли.
б) Напечатать матрицу смежности. Проверить, есть ли в графе вершины, не смежные с другими.
в) Напечатать для каждой вершины номера смежных вершин.
г) Проверить, есть ли в графе вершина, смежная со всеми другими вершинами.
д) Определить степень каждой вершины графа.
е) Напечатать номера вершин со степенью 1.
ж) Определить степень графа (максимальную степень его вершин).
'''

n = int(input('n = ')) # Количество вершин графа
E = [] # Список ребер графа
V = set() # Список вершин графа


def get_adjacency_matrix(E, V):
    '''
    Создадим матрицу смежности
    :param E: Список ребер
    :return: Матрица смежности
    '''
    m = max(V) + 1
    M = []
    cycle = False
    for i in range(m):
        M.append([0] * m)

    for e in E:
        M[e[0]][e[1]] += 1
        M[e[1]][e[0]] += 1
        if M[e[0]][e[1]] >= 2 or M[e[1]][e[0]] >= 2:
            cycle = True


    return M

try:
    while True:
        a, b = map(int, input('Введите ребро: ').split())
        E.append((a, b))
        V.add(a); V.add(b)
except:
    print('Ввод графа закончен')
finally:
    print(E, V, sep='\n')
    print(*get_adjacency_matrix(E, V), sep='\n')




